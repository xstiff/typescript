{"ast":null,"code":"export const ApiUrl = \"https://reqres.in/api/products\";\nexport const FetchApi = async function () {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  try {\n    const response = await fetch(`${ApiUrl}${params}`);\n    if (!response.ok) {\n      if (response.status === 404) {\n        return {\n          error: \"404: Resource not found\"\n        };\n      } else {\n        throw new Error(`Error: ${response.status}`);\n      }\n    }\n    return await response.json();\n  } catch (err) {\n    console.error(err);\n  }\n};\n_c = FetchApi;\nvar _c;\n$RefreshReg$(_c, \"FetchApi\");","map":{"version":3,"names":["ApiUrl","FetchApi","params","response","fetch","ok","status","error","Error","json","err","console"],"sources":["C:/Users/domin/Desktop/Zadanie/zad/src/utility/api.utility.tsx"],"sourcesContent":["export const ApiUrl: string = \"https://reqres.in/api/products\";\r\n\r\nexport const FetchApi = async (params: string = \"\") => {\r\n    try {\r\n        const response = await fetch(`${ApiUrl}${params}`);\r\n        if (!response.ok) {\r\n            if (response.status === 404) {\r\n                return { error: \"404: Resource not found\" };\r\n            } else {\r\n                throw new Error(`Error: ${response.status}`);\r\n            }\r\n        }\r\n        return await response.json();\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,MAAc,GAAG,gCAAgC;AAE9D,OAAO,MAAMC,QAAQ,GAAG,kBAA+B;EAAA,IAAxBC,MAAc,uEAAG,EAAE;EAC9C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,MAAO,GAAEE,MAAO,EAAC,CAAC;IAClD,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MACd,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QACzB,OAAO;UAAEC,KAAK,EAAE;QAA0B,CAAC;MAC/C,CAAC,MAAM;QACH,MAAM,IAAIC,KAAK,CAAE,UAASL,QAAQ,CAACG,MAAO,EAAC,CAAC;MAChD;IACJ;IACA,OAAO,MAAMH,QAAQ,CAACM,IAAI,EAAE;EAChC,CAAC,CAAC,OAAOC,GAAG,EAAE;IACVC,OAAO,CAACJ,KAAK,CAACG,GAAG,CAAC;EACtB;AACJ,CAAC;AAAC,KAdWT,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}