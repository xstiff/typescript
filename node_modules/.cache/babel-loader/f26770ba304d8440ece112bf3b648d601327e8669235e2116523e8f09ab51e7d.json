{"ast":null,"code":"export const ApiUrl = \"https://reqres.in/api/products\";\nexport const FetchApi = async function () {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  fetch(`${ApiUrl}${params}`).then(async response => {\n    if (response.ok) {\n      const data = await response.json();\n      return data;\n    }\n    throw new Error(\"Something went wrong\");\n  }).catch(err => {\n    // data = {\n    //     data: {\n    //         errorMessage: err.message,\n    //     },\n    // };\n  }).finally(() => console.log(\"Fetching finished\"));\n};\n_c = FetchApi;\nvar _c;\n$RefreshReg$(_c, \"FetchApi\");","map":{"version":3,"names":["ApiUrl","FetchApi","params","fetch","then","response","ok","data","json","Error","catch","err","finally","console","log"],"sources":["C:/Users/domin/Desktop/Zadanie/zad/src/utility/api.utility.tsx"],"sourcesContent":["export const ApiUrl: string = \"https://reqres.in/api/products\";\r\n\r\nexport const FetchApi = async (params: string = \"\") => {\r\n    fetch(`${ApiUrl}${params}`)\r\n        .then(async (response) => {\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                return data;\r\n            }\r\n            throw new Error(\"Something went wrong\");\r\n        })\r\n        .catch((err) => {\r\n            // data = {\r\n            //     data: {\r\n            //         errorMessage: err.message,\r\n            //     },\r\n            // };\r\n        })\r\n        .finally(() => console.log(\"Fetching finished\"));\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,MAAc,GAAG,gCAAgC;AAE9D,OAAO,MAAMC,QAAQ,GAAG,kBAA+B;EAAA,IAAxBC,MAAc,uEAAG,EAAE;EAC9CC,KAAK,CAAE,GAAEH,MAAO,GAAEE,MAAO,EAAC,CAAC,CACtBE,IAAI,CAAC,MAAOC,QAAQ,IAAK;IACtB,IAAIA,QAAQ,CAACC,EAAE,EAAE;MACb,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClC,OAAOD,IAAI;IACf;IACA,MAAM,IAAIE,KAAK,CAAC,sBAAsB,CAAC;EAC3C,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;IACZ;IACA;IACA;IACA;IACA;EAAA,CACH,CAAC,CACDC,OAAO,CAAC,MAAMC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC,CAAC;AACxD,CAAC;AAAC,KAjBWb,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}