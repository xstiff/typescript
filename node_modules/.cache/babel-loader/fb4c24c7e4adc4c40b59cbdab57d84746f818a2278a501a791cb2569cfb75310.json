{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\domin\\\\Desktop\\\\Zadanie\\\\zad\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.scss\";\nimport { Table } from \"./components/table/table.component\";\nimport { FetchApi } from \"./utility/api.utility\";\nimport { AboutView } from \"./components/table/about/about.component\";\nimport { useAppSelector } from \"./store/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [product, setProduct] = useState([]);\n  const [error, setError] = useState(\"\");\n  const useSelector = useAppSelector;\n  const aboutView = useSelector(state => state.aboutView.isVisible);\n  const fetchData = async params => {\n    const data = await FetchApi(params ? params : \"\");\n    console.log(\"params: \", data);\n    if (data.data.length === undefined) {\n      setProduct([data.data]);\n      return;\n    }\n    return setProduct(data.data);\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const handleChange = object => {\n    const target = object.target;\n    console.log(target.value);\n  };\n  const submitHandler = event => {\n    const target = event.target;\n    console.log(target);\n  };\n\n  // export const useForm = <T,>(callback: () => Promise<any>, initalState: T)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [aboutView && /*#__PURE__*/_jsxDEV(AboutView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Api search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: async e => {\n        e.preventDefault();\n        const numField = e.target.number;\n        if (isNaN(+numField.value)) {\n          setError(\"Enter a valid number\");\n        } else if (+numField.value < 0) {\n          setError(\"Only positive numbers are allowed\");\n        } else if (+numField.value.length > 2 || +numField.value.length < 0) {\n          setError(\"Only 1 and 2 digit numbers are allowed\");\n        } else if (+numField.value.length < 0) {\n          setError(\"Only 2 digit numbers are allowed\");\n        }\n        if (error) {\n          return false;\n        }\n        await fetchData(`?id=${numField.value}`);\n        numField.value = \"\";\n        return;\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"number\",\n        placeholder: \"Search by Id\",\n        onChange: x => handleChange(x)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search-btn\",\n        onClick: e => submitHandler(e),\n        type: \"submit\",\n        children: \"\\u2794\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Pantone value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: product.map(x => /*#__PURE__*/_jsxDEV(Table, {\n            product: x\n          }, x.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"DLT90//2LUQSGA8JlvpO3y60s9Y=\", true);\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Table","FetchApi","AboutView","useAppSelector","App","product","setProduct","error","setError","useSelector","aboutView","state","isVisible","fetchData","params","data","console","log","length","undefined","handleChange","object","target","value","submitHandler","event","e","preventDefault","numField","number","isNaN","x","map","id"],"sources":["C:/Users/domin/Desktop/Zadanie/zad/src/App.tsx"],"sourcesContent":["import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport \"./App.scss\";\nimport { Table } from \"./components/table/table.component\";\nimport { FetchApi } from \"./utility/api.utility\";\nimport { AboutView } from \"./components/table/about/about.component\";\nimport { useAppSelector } from \"./store/hooks\";\n\nexport type Product = {\n    id: number;\n    name: string;\n    color: string;\n    year: number;\n    pantone_value: string;\n};\n\nconst App = () => {\n    const [product, setProduct] = useState<Product[]>([]);\n    const [error, setError] = useState<string>(\"\");\n\n    const useSelector = useAppSelector;\n    const aboutView = useSelector((state) => state.aboutView.isVisible);\n\n    const fetchData = async (params?: string) => {\n        const data = await FetchApi(params ? params : \"\");\n        console.log(\"params: \", data);\n\n        if (data.data.length === undefined) {\n            setProduct([data.data]);\n            return;\n        }\n\n        return setProduct(data.data);\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const handleChange = (object: ChangeEvent<HTMLInputElement>) => {\n        const target: HTMLInputElement = object.target;\n\n        console.log(target.value);\n    };\n\n    const submitHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\n        const target = event.target;\n        console.log(target);\n    };\n\n    // export const useForm = <T,>(callback: () => Promise<any>, initalState: T)\n\n    return (\n        <div className=\"App\">\n            {aboutView && <AboutView />}\n            {/* <AboutView /> */}\n\n            <div className=\"header-container\">\n                <h1>Api search</h1>\n            </div>\n\n            <form\n                action=\"\"\n                onSubmit={async (e: any) => {\n                    e.preventDefault();\n                    const numField: HTMLInputElement = e.target.number;\n\n                    if (isNaN(+numField.value)) {\n                        setError(\"Enter a valid number\");\n                    } else if (+numField.value < 0) {\n                        setError(\"Only positive numbers are allowed\");\n                    } else if (\n                        +numField.value.length > 2 ||\n                        +numField.value.length < 0\n                    ) {\n                        setError(\"Only 1 and 2 digit numbers are allowed\");\n                    } else if (+numField.value.length < 0) {\n                        setError(\"Only 2 digit numbers are allowed\");\n                    }\n\n                    if (error) {\n                        return false;\n                    }\n\n                    await fetchData(`?id=${numField.value}`);\n                    numField.value = \"\";\n                    return;\n                }}\n            >\n                <input\n                    type=\"number\"\n                    name=\"number\"\n                    placeholder=\"Search by Id\"\n                    onChange={(x) => handleChange(x)}\n                />\n                <button\n                    className=\"search-btn\"\n                    onClick={(e) => submitHandler(e)}\n                    type=\"submit\"\n                >\n                    ➔\n                </button>\n                {error && <p className=\"error-message\">{error}</p>}\n            </form>\n\n            <div className=\"table-container\">\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Id</th>\n                            <th>Name</th>\n                            <th>Color</th>\n                            <th>Year</th>\n                            <th>Pantone value</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {product.map((x) => (\n                            <Table key={x.id} product={x} />\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}